{"version":3,"sources":["fBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Jweet.js","components/jweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","refreshUser","userObj","history","useHistory","useState","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","displayName","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Jweet","jweetObj","isOwner","editing","setEditing","text","newJweet","setNewJweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","alt","class","faTrash","faPencilAlt","JweetFactory","jweet","setJweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","jweets","setJweets","useEffect","onSnapshot","snapshot","jweetArray","docs","map","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setIsLoggeedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e271fcb3.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/compat/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function Profile({ refreshUser, userObj }) {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          value={newDisplayName}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Signin\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Signin\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fBase\";\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Jweet = ({ jweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newJweet, setNewJweet] = useState(jweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this jweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`jweets/${jweetObj.id}`).delete();\r\n      await storageService.refFromURL(jweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(jweetObj, newJweet);\r\n    await dbService.doc(`jweets/${jweetObj.id}`).update({\r\n      text: newJweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewJweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your jweet\"\r\n              value={newJweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Jweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{jweetObj.text}</h4>\r\n          {jweetObj.attachmentUrl && (\r\n            <img src={jweetObj.attachmentUrl} alt=\"img\" />\r\n          )}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jweet;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst JweetFactory = ({ userObj }) => {\r\n  const [jweet, setJweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (jweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const jweetObj = {\r\n      text: jweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"jweets\").add(jweetObj);\r\n    setJweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setJweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={jweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"img\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default JweetFactory;\r\n","import Jweet from \"components/Jweet\";\r\n\r\nimport { dbService } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport JweetFactory from \"components/jweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [jweets, setJweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"jweets\").onSnapshot((snapshot) => {\r\n      const jweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setJweets(jweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <JweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {jweets.map((jweet) => (\r\n          <Jweet\r\n            key={jweet.id}\r\n            jweetObj={jweet}\r\n            isOwner={jweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}'s Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggeedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggeedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggeedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}